# Définition du groupe de serveurs pour le load balancing
upstream browserquest_servers {
    # Maintenir les clients sur le même serveur (sticky session)
    ip_hash;

    server browserquest-server1:3000;
    server browserquest-server2:3000;
    server browserquest-server3:3000;
}

# Serveur principal pour le frontend + WebSocket
server {
    listen 80;
    server_name localhost;

    # Servir les fichiers statiques (client)
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # WebSocket (Socket.io) + Load Balancing
    location /socket.io/ {
        proxy_pass http://browserquest_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_buffering off;
    }
}

# Serveur secondaire pour accéder directement au backend (debug/test)
server {
    listen 8000;

    location / {
        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_buffering off;
    }
}

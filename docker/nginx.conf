# Définition du groupe de serveurs pour le load balancing
upstream browserquest_servers {
    # Algorithme de load balancing (round-robin par défaut)
    # Autres options: least_conn, ip_hash
    ip_hash; # Utilisons ip_hash pour que les clients restent connectés au même serveur

    server browserquest-server1:8000;
    server browserquest-server2:8000;
    server browserquest-server3:8000;
}

server {
    listen 80;
    server_name localhost;

    # Servir les fichiers statiques du client
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # Configuration pour WebSocket avec load balancing
    location /socket.io/ {
        proxy_pass http://browserquest_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Timeout configuration for WebSockets
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}

# Configuration pour exposer directement le port 8000 pour les tests
server {
    listen 8000;
    
    location / {
        proxy_pass http://browserquest_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}